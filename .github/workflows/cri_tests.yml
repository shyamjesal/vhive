name: vHive cri tests

on:
  push:
    branches: [ master ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
  workflow_dispatch:

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  cri-tests:
    name: CRI tests
    runs-on: [self-hosted, cri]
    
    steps:
    - name: Setup TMPDIR
      run: mkdir -p $HOME/tmp

    - name: Set up Go 1.15
      env:
          GOROOT: $HOME/go
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Setup containerd
      run: ./scripts/setup_containerd.sh

    - name: Build
      env:
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
      run: go build

    - name: Run vHive end-to-end tests
      env:
          TMPDIR: /root/tmp/
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
      run: make test-cri
    
    - name: Cleaning
      if: ${{ always() }}
      run: |
        kubeadm reset --cri-socket /etc/firecracker-containerd/fccd-cri.sock -f
        sudo pkill -INT vhive
        sudo pkill -INT firec
        sudo pkill -9 containerd
        ./scripts/create_devmapper.sh
        sudo rm /etc/firecracker-containerd/fccd-cri.sock
        rm ${HOME}/.kube/config
        ifconfig -a | grep _tap | cut -f1 -d":" | while read line ; do sudo ip link delete "$line" ; done
        ifconfig -a | grep tap_ | cut -f1 -d":" | while read line ; do sudo ip link delete "$line" ; done
        sudo ip link delete br0
        sudo ip link delete br1
